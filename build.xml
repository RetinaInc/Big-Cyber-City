<?xml version="1.0"?>

<project name="BCC" basedir="." default="usage">
	<property file="build.properties" />

	<path id="master-classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<!-- We need the servlet API classes: -->
		<!--  * for Tomcat 5/6 use servlet-api.jar -->
		<!--  * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>
	
    <path id="test-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
        <pathelement path="${test.dir}"/>
        <pathelement path="${web.dir}/WEB-INF/classes"/>
    </path>

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="build     --> Build the application" />
		<echo message="deploy    --> Deploy application as directory" />
		<echo message="deploywar --> Deploy application as a WAR file" />
		<echo message="install   --> Install application in Tomcat" />
		<echo message="reload    --> Reload application in Tomcat" />
		<echo message="start     --> Start Tomcat application" />
		<echo message="stop      --> Stop Tomcat application" />
		<echo message="list      --> List Tomcat applications" />
		<echo message="" />
	</target>

	<target name="build" description="Compile main source tree java files">
		
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="load" depends="tests, dbTests, deploy, reload, deploywar" description="Load the app. Use this target during development" />

	<target name="deploy" depends="build" description="Deploy application">
		<delete>
			<fileset dir="${static.path}" includes="**/*.*" />
			<fileset dir="${deploy.path}/" includes="**/*.*" />
		</delete>
		<copy todir="${deploy.path}/" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<!-- Static files are served from apache web server, not tomcat -->
		<copy todir="${static.path}/" preservelastmodified="true">
			<fileset dir="${static.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="deploywar" depends="build" description="Deploy application as a WAR file">
		<war destfile="ROOT.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="<dir>" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->

	<path id="catalina-ant-classpath">
		<!-- We need the Catalina jars for Tomcat -->
		<!--  * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
		</fileset>
	</path>

	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>

	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>

	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/" />
	</target>

	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>

	<!-- End Tomcat tasks -->




	<target name="buildtests" description="Compile test tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${test.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="tests" depends="build, buildtests" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false" failureproperty="tests.failed" showoutput="true">
			<classpath refid="test-classpath" />
			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/*Tests.*" />
					<exclude name="**/*DaoTests.*" />
					<exclude name="**/*ServiceTests.*"/>
				</fileset>
			</batchtest>

		</junit>

		<fail if="tests.failed">
	            tests.failed=${tests.failed}
	            ***********************************************************
	            ***********************************************************
	            ****  One or more tests failed!  Check the output ...  ****
	            ***********************************************************
	            ***********************************************************
	        </fail>
	</target>
	
    <target name="dbTests" depends="build, buildtests" 
            description="Run db tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false"/>
            
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*DaoTests.*"/>
                	<include name="**/*ServiceTests.*"/>
                </fileset>
            </batchtest>
            
        </junit>
        
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more DB tests failed!  Check the output ...  *
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

</project>